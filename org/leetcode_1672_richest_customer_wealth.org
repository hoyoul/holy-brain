:PROPERTIES:
:ID:       74FB4E33-0768-4E2E-A57F-1ECB6A6A0C2E
:mtime:    20230617092540 20230614195447 20230614173003 20230614161120
:ctime:    20230614161120
:END:
#+title: [leetcode] 1672 Richest Customer Wealth
#+AUTHOR: holy
#+EMAIL: hoyoul.park@gmail.com
#+DATE: <2023-06-17 Sat>
#+DESCRIPTION: leetcode의 explore에 있는 beginner문제다.
#+HUGO_DRAFT: true
* 문제
[[https://leetcode.com/problems/richest-customer-wealth/][링크]]
#+begin_important
You are given an m x n integer grid accounts where accounts[i][j]
is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return
the wealth that the richest customer has.

A customer's wealth is the amount of money they have in all their bank
accounts. The richest customer is the customer that has the maximum
wealth.
#+end_important
** example1
#+BEGIN_SRC text
Input: accounts = [[1,2,3],[3,2,1]]
Output: 6
Explanation:
1st customer has wealth = 1 + 2 + 3 = 6
2nd customer has wealth = 3 + 2 + 1 = 6
Both customers are considered the richest with a wealth of 6 each, so return 6.
#+END_SRC
 
** example2
#+BEGIN_SRC text
Input: accounts = [[1,5],[7,3],[3,5]]
Output: 10
Explanation: 
1st customer has wealth = 6
2nd customer has wealth = 10 
3rd customer has wealth = 8
The 2nd customer is the richest with a wealth of 10.
#+END_SRC
** example3
#+BEGIN_SRC text
Input: accounts = [[2,8,7],[7,1,3],[1,9,5]]
Output: 17
#+END_SRC
** constraints
#+begin_important
m == accounts.length
n == accounts[i].length
1 <= m, n <= 50
1 <= accounts[i][j] <= 100
#+end_important
* 생각
account라는 data를 사람과 bank라는 2개의 data로 나타내는데 2d array를
사용한다.
* 풀이
#+BEGIN_SRC python :results output :exports both
class Solution(object):
    def maximumWealth(self, accounts):
        """
        :type accounts: List[List[int]]
        :rtype: int
        """
        output = []
        for i,v in enumerate(accounts):
            output.append(sum(accounts[i]))
        return max(output)
#+END_SRC
accept되긴 했다. 그런데 여기서 index를 얻어오기 위해서 enumerate 한것이
걸린다. 꼭 이런방법을 택했었어야 했을까?
* 참조
