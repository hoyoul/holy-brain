:PROPERTIES:
:ID:       E67CE31F-8225-45BC-BD9B-751A36AF9075
:mtime:    20230607160351 20230606140003 20230606125916 20230606110157
:ctime:    20230606110157
:END:
#+title: [정리]python 기초1
#+AUTHOR: holy
#+EMAIL: hoyoul.park@gmail.com
#+DATE: <2023-06-06 Tue>
#+DESCRIPTION: python을 사용할때마다 googling하거나 기억나는것만 사용한다. 정리할 필요를 느꼈다. 그래서 python의 기초를 정리해 본다. 그냥 정리하는게 아니라, 재해석을 하려고 한다. 내가 바라보는 언어는 기본적으로 lisp의 관점이다. church의 생각이라고 말할 수도 있다. 그런데 python을 정리할 때는, lisp의 관점뿐 아니라 von neumann의 생각으로 바라볼 필요를 느낀다. 중언 부언이긴 해도, 지금 현재에서 내 생각을 쓰려고 한다. 
#+HUGO_DRAFT: false
* python이란?
python은 함수형언어가 아니라, =객체 지향 언어= 다. python은 모든 것을
객체로 바라본다. 따라서 우리도, python 코드의 모든것을 객체로
생각하고, 객체로 해석해야 한다.
* python의 개발 환경
python을 사용하려면 setting이 필요하다. computer에 전원을 넣고 바로
python 코드를 작성하고 실행하는 그림을 상상하지 말자. 코딩하는 방법은
여러가지다. 코딩할 수 있는 다양한 editor가 존재하고, 그 많은
editor에서 선택을 해야한다. 나는 emacs를 선택했다. emacs를 선택해서
끝나는게 아니다. 다양한 방법이 존재한다. elpy를 사용해서 코딩할수도
있고, lsp로 코딩할수도 있고, jupyter notebook으로 코딩할수도 있고,
google colab과 연결해서 사용할 수도 있다. 짜증나지만, 많은 방법이
있다. 여튼 중요한건 난 emacs를 사용한다는 것이고 emacs를
사용한다는 것은, =everything is possbile= 이다. 한계는 없다.

** emacs 
python code를 작성하는 editor로 emacs를 사용한다. emacs에서 python을
작성하기위한 setting이 필요하다. lsp를 사용해서 속시원하게 사용하는게
추천되지만, 나는 2014년 맥북 사용자다. 분수에 맞게 코딩을 하자.

